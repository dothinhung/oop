
package webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Calculate", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculate {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://WebService/", className = "webservice.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://WebService/", className = "webservice.HelloResponse")
    @Action(input = "http://WebService/Calculate/helloRequest", output = "http://WebService/Calculate/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param number1
     * @param number2
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Substraction")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Substraction", targetNamespace = "http://WebService/", className = "webservice.Substraction")
    @ResponseWrapper(localName = "SubstractionResponse", targetNamespace = "http://WebService/", className = "webservice.SubstractionResponse")
    @Action(input = "http://WebService/Calculate/SubstractionRequest", output = "http://WebService/Calculate/SubstractionResponse")
    public double substraction(
        @WebParam(name = "number1", targetNamespace = "")
        double number1,
        @WebParam(name = "number2", targetNamespace = "")
        double number2);

    /**
     * 
     * @param number1
     * @param number2
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Addition")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Addition", targetNamespace = "http://WebService/", className = "webservice.Addition")
    @ResponseWrapper(localName = "AdditionResponse", targetNamespace = "http://WebService/", className = "webservice.AdditionResponse")
    @Action(input = "http://WebService/Calculate/AdditionRequest", output = "http://WebService/Calculate/AdditionResponse")
    public double addition(
        @WebParam(name = "number1", targetNamespace = "")
        double number1,
        @WebParam(name = "number2", targetNamespace = "")
        double number2);

    /**
     * 
     * @param number1
     * @param number2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divisio", targetNamespace = "http://WebService/", className = "webservice.Divisio")
    @ResponseWrapper(localName = "divisioResponse", targetNamespace = "http://WebService/", className = "webservice.DivisioResponse")
    @Action(input = "http://WebService/Calculate/divisioRequest", output = "http://WebService/Calculate/divisioResponse")
    public String divisio(
        @WebParam(name = "number1", targetNamespace = "")
        double number1,
        @WebParam(name = "number2", targetNamespace = "")
        double number2);

    /**
     * 
     * @param number1
     * @param number2
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplication", targetNamespace = "http://WebService/", className = "webservice.Multiplication")
    @ResponseWrapper(localName = "multiplicationResponse", targetNamespace = "http://WebService/", className = "webservice.MultiplicationResponse")
    @Action(input = "http://WebService/Calculate/multiplicationRequest", output = "http://WebService/Calculate/multiplicationResponse")
    public double multiplication(
        @WebParam(name = "number1", targetNamespace = "")
        double number1,
        @WebParam(name = "number2", targetNamespace = "")
        double number2);

}
